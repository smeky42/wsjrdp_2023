-#  Copyright (c) 2012-2021, German Contingent for the Worldscoutjamboree 2023. This file is part of
-#  hitobito_wsjrdp_2023 and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/hitobito/hitobito_wsjrdp_2023.


-# BEWARE: This partial is used from different places (e.g. event/register/register).
-#         Make sure not to use relative partial paths here or in any extensions
-#         unless these partials also exist in all folders referencing this file here.

- without_relations ||= false

= javascript_include_tag "https://rawgithub.com/indrimuska/jquery-editable-select/master/dist/jquery-editable-select.min.js"
%link{:rel => :stylesheet, :type => :"text/css", :href => "https://rawgithub.com/indrimuska/jquery-editable-select/master/dist/jquery-editable-select.min.css"}


= field_set_tag do
  = f.labeled_input_fields :first_name, :last_name, :nickname
  -# = f.labeled_string_field(:company_name,
  -#                          placeholder: I18n.t('global.search.placeholder_company_name'),
  -#                          data: { provide: 'entity',
  -#                                  url: query_company_name_path })
  -# = f.labeled_input_fields :company

  = render_extensions :name_fields, locals: { f: f }

= render 'contactable/fields', f: f

= field_set_tag do
  = f.labeled(:gender) do
    - (Person::GENDERS + ['']).each do |key|
      = f.inline_radio_button(:gender, key, entry.gender_label(key))

  = f.labeled_string_field(:birthday,
                           value: f.date_value(:birthday),
                           help_inline: t('.format_birthday'),
                           class: 'span2')

= render_extensions :fields, locals: { f: f }

- if !without_relations && PeopleRelation.possible_kinds.present?
  = field_set_tag do
    = f.labeled_inline_fields_for :relations_to_tails,
                                  'people_relation_fields',
                                  entry.relations_to_tails.includes(:tail)

= field_set_tag do
  = f.labeled_input_field(:additional_information, help: t('.no_sensitive_information'))

:javascript
  var association_tree = JSON.parse('#{raw @rdp_groups.to_json}');
  var rdp_association = '#{@person.rdp_association}';
  var rdp_association_region = '#{@person.rdp_association_region}';
  var rdp_association_sub_region = '#{@person.rdp_association_sub_region}';
  var rdp_association_group = '#{@person.rdp_association_group}';
  var dropdownIds = ['#person_rdp_association', '#person_rdp_association_region', '#person_rdp_association_sub_region','#person_rdp_association_group']
  
  function getNextDropdwonId(id) {
    return dropdownIds[dropdownIds.indexOf(id) + 1];
  }

  function getPreviousDropdwonId(id) {
    return dropdownIds[dropdownIds.indexOf(id) - 1];
  }

  function getSubTree(id) {
    switch (id) {
      case '#person_rdp_association':
        return association_tree;
      case '#person_rdp_association_region':
        rdp_association = $(getPreviousDropdwonId(id)).val();
        return association_tree[rdp_association];
      case '#person_rdp_association_sub_region':
        rdp_association_region = $(getPreviousDropdwonId(id)).val();
        return association_tree[rdp_association][rdp_association_region]
      case '#person_rdp_association_group':
        rdp_association_sub_region = $(getPreviousDropdwonId(id)).val();
        return association_tree[rdp_association][rdp_association_region][rdp_association_sub_region]
    }
  }

  function loadDropdown(id){
    $(id).editableSelect('clear');
    $(id).editableSelect('add', $(id).val());
    var subTree = getSubTree(id);
    if(subTree != undefined) {
      for (const [key, value] of Object.entries(subTree)) {
        if(key != $(id).val()) {
          $(id).editableSelect('add',key);
        }
      }
    }
    $(id).editableSelect();
  }

  function setEvent(id) {
     $(id).editableSelect().on('select.editable-select', function (e, li) {
      if(getNextDropdwonId(id) != undefined) {
        //console.log("Event " + id + " - " + $(id).val());
        loadDropdown(getNextDropdwonId(id));
      }
    });
  }

  function initialize(id) {
    loadDropdown(id);
    setEvent(id);
    console.log(id + " Ready");
  }

  $(document).ready(function() {
    console.log("Document Ready");
    $('#person_rdp_association').promise().done((self) => { initialize(self.selector); });
    $('#person_rdp_association_region').promise().done((self) => { initialize(self.selector); });
    $('#person_rdp_association_sub_region').promise().done((self) => { initialize(self.selector); });
    $('#person_rdp_association_group').promise().done((self) => { initialize(self.selector); });
  });


